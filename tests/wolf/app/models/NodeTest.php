<?php

require_once 'Node.php';


/* Simplistic dynamic test method.
 * 
 * Used by testRegisterMethod(), test__call()
 */
function simpleDynTest($name) {
    return "Hello, $name!";
}

/* Simplistic dynamic test method.
 * 
 * Used by testRegisterMethod(), test__call()
 */
function simpleStaticDynTest($name) {
    return "Ni hao, $name!";
}

/* Simplistic dynamic test method.
 * 
 * Used by testRegisterMethod(), test__callStatic()
 */
function simpleStaticDynTwoParamTest($name, $hello) {
    return "$hello, $name!";
}

/* Simplistic dynamic test method.
 * 
 * Used by testRegisterMethod(), test__callStatic()
 */
function simpleStaticDynArrayParamTest($params) {
    return "$params[0], $params[1]!";
}

/**
 * Test class for Node.
 * Generated by PHPUnit on 2011-03-10 at 21:45:54.
 */
class NodeTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Node
     */
    protected $object;
    
    protected $kanaromaji = array(  'いつか;itsuka',
                                    'いつか;itsuka',
                                    'いつつ;itsutsu',
                                    'いつでも;itsudemo',
                                    'いつのまにか;itsunomanika',
                                    'いつまでも;itsumademo',
                                    'いつも;itsumo',
                                    'いてん;iten',
                                    'いと;ito',
                                    'いとこ;itoko',
                                    'いとこ;itoko',
                                    'いとま;itoma',
                                    'いど;ido',
                                    'いど;ido',
                                    'いどう;idou',
                                    'いない;inai',
                                    'いなか;inaka',
                                    'いにしえ;inishie',
                                    'いぬ;inu',
                                    'いね;ine',
                                    'いねむり;inemuri',
                                    'いのち;inochi',
                                    'いのる;inoru',
                                    'いはん;ihan',
                                    'いばる;ibaru',
                                    'いふく;ifuku',
                                    'いま;ima',
                                    'いま;ima',
                                    'いまに;imani',
                                    'いまにも;imanimo',
                                    'いみ;imi',
                                    'いもうと;imouto',
                                    'いや;iya',
                                    'いやがる;iyagaru',
                                    'いよいよ;iyoiyo',
                                    'いらい;irai',
                                    'いらい;irai',
                                    'いらいら;iraira',
                                    'いらっしゃる;irassharu',
                                    'いりぐち;iriguchi',
                                    'いりょう;iryou',
                                    'いる;iru',
                                    'いる;iru',
                                    'うち;uchi',
                                    'うちあわせ;uchiawase',
                                    'うちあわせる;uchiawaseru',
                                    'うちけす;uchikesu',
                                    'うちゅう;uchuu',
                                    'うっかり;ukkari',
                                    'うったえる;uttaeru',
                                    'うつ;utsu',
                                    'うつる;utsuru',
                                    'うらむ;uramu',
                                    'うらやましい;urayamashii',
                                    'うらやむ;urayamu',
                                    'うりあげ;uriage',
                                    'うりきれ;urikire',
                                    'うりきれる;urikireru',
                                    'うりば;uriba',
                                    'うる;uru',
                                    'おなじ;onaji',
                                    'おに;oni',
                                    'おにいさん;oniisan',
                                    'おねえさん;oneesan',
                                    'おねがいします;onegaishimasu',
                                    'おのおの;onoono',
                                    'おのおの;onoono',
                                    'おはよう;ohayou',
                                    'おば;oba',
                                    'おばあさん;obaasan',
                                    'おばさん;obasan',
                                    'おひる;ohiru',
                                    'かいがい;kaigai',
                                    'かいがん;kaigan',
                                    'かいぎ;kaigi',
                                    'かいけい;kaikei',
                                    'かいけつ;kaiketsu',
                                    'かくす;kakusu',
                                    'かくだい;kakudai',
                                    'かくち;kakuchi',
                                    'かくちょう;kakuchou',
                                    'かくど;kakudo',
                                    'かくにん;kakunin',
                                    'かくべつ;kakubetsu',
                                    'かくりつ;kakuritsu',
                                    'すいせん;suisen',
                                    'すいそ;suiso',
                                    'すいちょく;suichoku',
                                    'すいてい;suitei',
                                    'すいてき;suiteki',
                                    'すいとう;suitou',
                                    'すいどう;suidou',
                                    'ちゅうがく;chuugaku',
                                    'ちゅうげん;chuugen',
                                    'てがみ;tegami',
                                    'りょうしん;ryoushin',
                                    'どうぶつえん;doubutsuen',
                                    'もくようび;mokuyoubi',
                                    'おおよろこび;ooyorokobi',
                                    'はじめて;hajimete',
                                    'わたしたち;watashitachi',
                                    'いじょう;ijou',
                                    'ならぶ;narabu',
                                    'きせつ;kisetsu',
                                    'こたえる;kotaeru',
                                    'きりん;kirin',
                                    'くび;kubi',
                                    'しわ;shiwa',
                                    'ぞう;zou',
                                    'しょうぶ;shoubu',
                                    'しょうべん;shouben',
                                    'しょうぼう;shoubou',
                                    'しょうぼうしょ;shoubousho',
                                    'しょうみ;shoumi',
                                    'しょうめい;shoumei',
                                    'しょうめん;shoumen',
                                    'じゅわき;juwaki',
                                    'じゅん;jun',
                                    'じゅんかん;junkan',
                                    'じゅんさ;junsa',
                                    'せんすい;sensui',
                                    'せんせい;sensei',
                                    'せんせい;sensei',
                                    'せんせんげつ;sensengetsu',
                                    'せんせんしゅう;sensenshuu',
                                    'せんそう;sensou',
                                    'せんぞ;senzo',
                                    'せんたく;sentaku',
                                    'せんたく;sentaku',
                                    'せんたん;sentan',
                                    'せんでん;senden',
                                    'せんとう;sentou',
                                    'せんぱい;senpai',
                                    'せんぷうき;senpuuki',
                                    'せんめん;senmen',
                                    'せんろ;senro',
                                    'ぜいかん;zeikan',
                                    'おっしゃる;ossharu',
                                    'むすび;musubi',
                                    'いや;iya',
                                    'おもい;omoi',
                                    'リュック・サック;ryukku_sakku',
                                    'おやつ;oyatsu',
                                    'デザート;dezaato',
                                    'せんべい;senbei',
                                    'あまい;amai',
                                    'がんねん;gannen',
                                    'たす;tasu',
                                    'とし;toshi',
                                    'ごぞんじです;gozonjidesu',
                                    'どなたか;donataka',
                                    'アップライト・ピアノ;appuraito_piano',
                                    'グランド・ピアノ;gurando_piano',
                                    'がいこくせい;gaikokusei',
                                    'こくさん;kokusan',
                                    'くろい;kuroi',
                                    'ちゃいろ;chairo',
                                    'ひつよう;hitsuyou',
                                    'こうかんできる;koukandekiru',
                                    'アクセント;akusento',
                                    'かわむら;kawamura',
                                    'こうし;koushi',
                                    'える;eru',
                                    'ぶれひとげき;burehitogeki',
                                    'かのじょ;kanojo',
                                    'それん(=そびえとしゃかいしゅぎきょうわこくれんぽう);soren-sobietoshakaishugikyouwakokurenpou',
                                    'ぎきょく;gikyoku',
                                    'ブレヒトのぎきょく;burehitonogikyoku',
                                    'さくひん;sakuhin',
                                    'かんしょう;kanshou',
                                    'かんしょうする;kanshousuru',
                                    'ごちそうさまでした;gochisousamadeshita',
                                    'おじゃまします;ojamashimasu',
                                    'いらっしゃい;irasshai',
                                    'いらっしゃいませ;irasshaimase',
                                    'どうぞ、こちらへ;douzo_kochirahe',
                                    'どうぞおかけください;douzookakekudasai',
                                    'なんで;nande',
                                    'よく;yoku',
                                    'おきて;okite',
                                    'ぜんたいで;zentaide',
                                    'へいほうキロメートル;heihoukiromeetoru',
                                    'かい;kai',
                                    'キロ;kiro',
                                    'おりる;oriru',
                                    'ねる;neru',
                                    'でる;deru',
                                    'ばんごはん;bangohan',
                                    'ちか;chika',
                                    'ちかてつ;chikatetsu',
                                    'しょくどう;shokudou',
                                    'ろうか;rouka',
                                    'いりぐち;iriguchi',
                                    'すし;sushi',
                                    'ちゅっちょうりょこう;chucchouryokou',
                                    'きっぷ;kippu',
                                    'しれとこはんとう;shiretokohantou',
                                    'ほだか;hodaka',
                                    'のりくら;norikura',
                                    'みなみアルプス;minamiarupusu',
                                    'きただけ;kitadake',
                                    'しょうなんかいがん;shounankaigan',
                                    'じょうもんぶんか;joumonbunka',
                                    'やよいぶんか;yayoibunka',
                                    'こふんぶんか;kofunbunka',
                                    'あすかじだい;asukajidai',
                                    'ならじだい;narajidai',
                                    'しせいせいど;shiseiseido',
                                    'しょうとくたいし;shoutokutaishi',
                                    'ほうりゅうじ;houryuuji',
                                    'たいかのかいしん;taikanokaishin',
                                    'じんしんのらん;jinshinnoran',
                                    'とき;toki',
                                    'あいだ;aida',
                                    'さびしい;sabishii',
                                    'をのぼる;wonoboru',
                                    'そびえとしゃかいしゅぎきょうわこくれんぽう;sobietoshakaishugikyouwakokurenpou',
                                    'ふけんこう;fukenkou');

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Node();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        $this->object = null;
    }
    
    /**
     * @covers Node::__call
     * @todo Implement test__call().
     */
    public function test__call() {
        $actual = Node::registerMethod('someMethod', 'simpleDynTest');
        $this->assertTrue($actual);
        
        $expected = 'Hello, Martijn!';
        $actual = $this->object->someMethod('Martijn');
        
        $this->assertEquals($expected, $actual);
        
        //--------
        
        $actual = Node::registerMethod('someNewMethod', 'simpleStaticDynTwoParamTest', true);
        $this->assertTrue($actual);
        
        $expected = 'Konichiwa, Martijn!';
        $actual = Node::someNewMethod('Martijn', 'Konichiwa');
        $this->assertEquals($expected, $actual);

        //--------
        
        $actual = Node::registerMethod('someNewArrayMethod', 'simpleStaticDynArrayParamTest', true);
        $this->assertTrue($actual);
        
        $expected = 'Hi, guy!';
        $actual = Node::someNewArrayMethod(array('Hi', 'guy'));
        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers Node::__callStatic
     * @todo Implement test__callStatic().
     * 
     * expectedException BadMethodCallException
     */
    public function test__callStatic() {
        $expected = 'Ni hao, Martijn!';
        $actual = simpleStaticDynTest('Martijn');
        $this->assertEquals($expected, $actual);

        //--------
        
        $actual = Node::registerMethod('someStatMethod', 'simpleStaticDynTest', true);
        $this->assertTrue($actual);
        
        $expected = 'Ni hao, Martijn!';
        $actual = Node::someStatMethod('Martijn');
        $this->assertEquals($expected, $actual);
        
        //--------
        
        $actual = Node::registerMethod('someNewStatMethod', 'simpleStaticDynTwoParamTest', true);
        $this->assertTrue($actual);
        
        $expected = 'Konichiwa, Martijn!';
        $actual = Node::someNewStatMethod('Martijn', 'Konichiwa');
        $this->assertEquals($expected, $actual);
        
        //--------
        
        $actual = Node::registerMethod('someNewStatMethod', 'simpleStaticDynTwoParamTest', true);
        $this->assertTrue($actual);
        
        $expected = 'Konichiwa, Martijn!';
        $actual = Node::someNewStatMethod('Martijn', 'Konichiwa');
        $this->assertEquals($expected, $actual);

        //--------
        
        $actual = Node::registerMethod('someNewArrayStatMethod', 'simpleStaticDynArrayParamTest', true);
        $this->assertTrue($actual);
        
        $expected = 'Hi, guy!';
        $actual = Node::someNewArrayStatMethod(array('Hi', 'guy'));
        $this->assertEquals($expected, $actual);
        
    }

    /**
     * @covers Node::registerMethod
     * @todo Implement testRegisterMethod().
     * 
     * @expectedException InvalidArgumentException
     */
    public function testRegisterMethod() {
        
        $this->assertTrue(method_exists('Node', 'registerMethod'));
        
        $actual = Node::registerMethod('someMethod', 'nonExistingMethod');
        $this->assertFalse($actual);
        
        $actual = Node::registerMethod('someMethod', 'simpleDynTest');
        $this->assertTrue($actual);
        
        $actual = Node::registerMethod('someStatMethod', 'simpleStaticDynTest', true);
        $this->assertTrue($actual);
    }

    /**
     * @covers Node::toSlug
     */
    public function testToSlug() {
        // Remove the following lines when you implement this test.
        $this->assertEquals("this-is-a-slug-test", Node::toSlug("This is a slug test"));
        $this->assertEquals("this-is-a-slug-test", Node::toSlug("This IS  a slug-test"));
        $this->assertEquals("this-is-a-2nd-slug-test-part-two", Node::toSlug("This IS  a 2nd slug---test part-two"));
        $this->assertEquals("this-is-another-slug_test", Node::toSlug("This is another, slug_test"));
        $this->assertEquals("konnichiha", Node::toSlug('こんにちは'));
        $this->assertEquals("aa-a-ae-a-ae-oe-o", Node::toSlug("å Å ä Ä ä ö Ö"));
        
        $line = 1;

        foreach($this->kanaromaji as $test){
            list($jap,$rom) = explode(';',trim($test));

            $chk = Node::toSlug($jap);
            $this->assertEquals($chk,$rom);
            $line++;
        }
    }
    
}

?>
